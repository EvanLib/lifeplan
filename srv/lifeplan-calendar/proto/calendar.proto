syntax = "proto3";

package calendar;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service CalendarService {
    rpc CreateCalendar(Calendar) returns (CalendarResponse);
    rpc GetCalendar(FincByIdRequest) returns (CalendarResponse);
    rpc RemoveCalendar(FincByIdRequest) returns (EmptyResponse);
    rpc UpdateCalendar(Calendar) returns (CalendarResponse);

    rpc CreateEvent(Event) returns (EventResponse);
    rpc GetEvent(FincByIdRequest) returns (EventResponse);
    rpc UpdateEvent(Event) returns (EventResponse);
    rpc RemoveEvent(FincByIdRequest) returns (EmptyResponse);
    rpc GetEventsRange(EventRangeRequest) returns (EventRangeResponse);
}

message EmptyResponse {}

message Calendar {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string name = 2 [(gogoproto.moretags) = "bson:\"name\""];
    string userid = 3 [(gogoproto.moretags) = "bson:\"userid\""];
}

message CalendarResponse {
    string status = 1;
    Calendar calendar = 2;
    string error = 3;
}

message FincByIdRequest {
    string id = 1;
}

message EventRangeRequest {
    google.protobuf.Timestamp start = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"start\""];
    google.protobuf.Timestamp end = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"end\""];  
}

message EventRangeResponse {
    repeated Event events = 1;
}

message EventResponse {
    int32 status = 1;
    string err = 2;
    Event event = 3;
}

message Event {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string title = 2 [(gogoproto.moretags) = "bson:\"title\""];
    string userid = 3 [(gogoproto.moretags) = "bson:\"userid\""];
    google.protobuf.Timestamp start = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"start\""];
    google.protobuf.Timestamp end = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"end\""];
    google.protobuf.Duration duration = 6 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"duration\""];
    bool recurring = 7 [(gogoproto.moretags) = "bson:\"recurring\""];
    bool allday = 8 [(gogoproto.moretags) = "bson:\"allday\""];
    string rrule = 9 [(gogoproto.moretags) = "bson:\"rrule\""];
}