syntax = "proto3";

package calendar;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service CalendarService {
    rpc CreateCalendar(Calendar) returns (CalendarResponse);
    rpc GetCalendar(FincByIdRequest) returns (CalendarResponse);
    rpc RemoveCalendar(FincByIdRequest) returns (EmptyResponse);
    rpc UpdateCalendar(Calendar) returns (CalendarResponse);

    rpc CreateEvent(Event) returns (EventResponse);
    rpc GetEvent(FincByIdRequest) returns (EventResponse);
    rpc UpdateEvent(EventUpdateRequest) returns (EventResponse);
    rpc RemoveEvent(EventUpdateRequest) returns (EmptyResponse);
    rpc GetEventsRange(EventRangeRequest) returns (EventRangeResponse);

    rpc CreateTask(Task) returns (TaskResponse);
    rpc GetTask(FincByIdRequest) returns (TaskResponse);
    rpc GetTasks(TasksRequest) returns (TasksTree);
    rpc UpdateTasksState(TaskList) returns (TasksTree);
    rpc UpdateTask(Task) returns(TaskResponse);
    rpc DeleteTask(FincByIdRequest) returns (EmptyResponse);
}

message EmptyResponse {}

message Calendar {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string name = 2 [(gogoproto.moretags) = "bson:\"name\""];
    string userid = 3 [(gogoproto.moretags) = "bson:\"userid\""];
}

message CalendarResponse {
    string status = 1;
    Calendar calendar = 2;
    string error = 3;
}

message FincByIdRequest {
    string id = 1;
}

message EventRangeRequest {
    string userid = 1;
    google.protobuf.Timestamp start = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"start\""];
    google.protobuf.Timestamp end = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"end\""];  
}

message EventUpdateRequest {
    int32 updatetype = 1;
    Event event = 2;
}

message EventRangeResponse {
    repeated Event events = 1;
}

message EventResponse {
    int32 status = 1;
    string err = 2;
    Event event = 3;
}

message Event {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string title = 2 [(gogoproto.moretags) = "bson:\"title\""];
    string userid = 3 [(gogoproto.moretags) = "bson:\"userid\""];
    google.protobuf.Timestamp start = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"start\""];
    google.protobuf.Timestamp end = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"end\""];
    google.protobuf.Duration duration = 6 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"duration\""];
    bool recurring = 7 [(gogoproto.moretags) = "bson:\"recurring\""];
    bool allday = 8 [(gogoproto.moretags) = "bson:\"allday\""];
    string rrule = 9 [(gogoproto.moretags) = "bson:\"rrule\""];
    string exrule = 10 [(gogoproto.moretags) = "bson:\"exrule\""];
    repeated google.protobuf.Timestamp exdates = 11 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"exdates\""];
    string tasknodeid = 12 [(gogoproto.moretags) = "bson:\"tasknodeid\""];
}

message Task {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string categoryid = 2 [(gogoproto.moretags) = "bson:\"categoryid\""];
    int32 state = 3 [(gogoproto.moretags) = "bson:\"state\""];
    string task = 4 [(gogoproto.moretags) = "bson:\"task\""];
    string category = 5 [(gogoproto.moretags) = "bson:\"category\""];
    string parent = 6 [(gogoproto.moretags) = "bson:\"parent\""];
    repeated Task children = 7 [(gogoproto.moretags) = "bson:\"-\""];
}

message TreeNode { 
    Task task = 1;
    repeated TreeNode subtasks = 2;
}

message TasksTree {
    repeated TreeNode nodes = 1;
    string categoryid = 2;
}

message TasksRequest {
    string categoryid = 1 [(gogoproto.moretags) = "bson:\"categoryid\""];
    string filter = 2 [(gogoproto.moretags) = "bson:\"filter\""];
    google.protobuf.Timestamp  categorytimestamp = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"categorytimestamp\""];
}

message TaskList {
    string categoryid = 2 [(gogoproto.moretags) = "bson:\"categoryid\""];
    google.protobuf.Timestamp  categorytimestamp = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "bson:\"categorytimestamp\""];
    map<string, int32> TaskStateMap = 4 [(gogoproto.moretags) = "bson:\"taskstatemap\""];
}

message TaskResponse {
    int32 status = 1;
    string err = 2;
    Task task = 3;
}


